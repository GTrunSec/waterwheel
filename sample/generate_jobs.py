import requests
import uuid

WATERWHEEL_HOST = 'http://localhost:8080'

project = 'autogen_project'

requests.post(WATERWHEEL_HOST + '/api/projects', json={
    'uuid': '9496b838-f77b-410e-9d67-72a320cb00e0',
    'name': project,
    'description': 'a project for the autogenerated test jobs'
})

template = {
    "uuid": None,
    "project": project,
    "name": None,
    "description": "a generated job",
    "triggers": [
        {
            "name": "hourly",
            "start": "2021-02-22T00:00:00Z",
            "period": "1h",
        }
    ],
    "tasks": [
        {
            "name": "step0",
            "docker": {
                "image": "python:3-alpine",
                "args": ["python", "-c", "import random, sys; sys.exit(random.randint(0, 1))"],
            },
            "depends": [
                "trigger/hourly"
            ],
        },
        {
            "name": "step1",
            "docker": {
                "image": "bash",
                "args": ["echo", "step1"],
            },
            "depends": [
                "task/step0"
            ],
        },
        {
            "name": "step2a",
            "docker": {
                "image": "bash",
                "args": ["echo", "step2a"],
            },
            "depends": [
                "task/step1"
            ],
        },
        {
            "name": "step2b",
            "docker": {
                "image": "bash",
                "args": ["echo", "step2b"],
            },
            "depends": [
                "task/step1"
            ],
        },
        {
            "name": "step3",
            "docker": {
                "image": "bash",
                "args": ["echo", "step3"],
            },
            "depends": [
                "task/step1",
                "task/step2b"
            ],
        },
        {
            "name": "y_failure",
            "depends_failure": [
                "task/step0",
                "task/step1",
                "task/step2a",
                "task/step2b",
                "task/step3"
            ],
            "threshold": 1,
        },
        {
            "name": "x_success",
            "depends": [
                "task/step2b",
                "task/step3",
            ],
        },
        {
            "name": "z_cleanup",
            "depends": [
                "task/y_failure",
                "task/x_success",
            ],
            "threshold": 1,
        }
    ]
}

for i in range(10):

    name = f'job {i}'
    resp = requests.get(WATERWHEEL_HOST + '/api/jobs', params={'name': name, 'project': project})
    if resp.status_code == 404:
        job_id = str(uuid.uuid4())
    else:
        job_id = resp.json()['id']

    job = template.copy()
    job['name'] = name
    job['uuid'] = job_id

    print(f'creating job {i}')
    resp = requests.put(WATERWHEEL_HOST + '/api/jobs', json=job)
    resp.raise_for_status()
